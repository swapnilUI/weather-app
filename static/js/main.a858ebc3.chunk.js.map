{"version":3,"sources":["serviceWorker.ts","store/weatherReducer/index.ts","store/weatherReducer/action-types.ts","store/index.ts","components/core/Loader.tsx","assets/common/Contstants.ts","components/views/WeatherView/actions.ts","components/core/RadioGroup.tsx","components/core/Arrows.tsx","components/views/WeatherView/_DayCard.tsx","assets/common/Utility.ts","components/views/WeatherView/_DayCardsSlide.tsx","components/core/BarChart.tsx","components/core/ErrorAlert.tsx","components/views/WeatherView/_WeatherInfo.tsx","components/views/WeatherView/WeatherAppMainView.tsx","App.tsx","index.tsx","components/createApp.tsx","assets/images/arrow.svg","assets/images/loader.gif"],"names":["Boolean","window","location","hostname","match","initialState","data","cod","message","cnt","isLoading","WeatherReducer","state","arguments","length","undefined","action","type","payload","Object","objectSpread","createStore","reducer","combineReducers","weather","createReduxStore","applyMiddleware","thunk","FetchResultType","Loader","react_default","a","createElement","LoaderWrapper","src","LoaderImg","alt","width","styled","section","_templateObject","openweathermapURL","concat","TempUnit","Units","label","value","months","getWeatherDataRemoteAction","unit","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","weatherData","wrap","_context","prev","next","fetchingWeatherDataAction","openWeatherMapAPI","sent","getWeatherDataAction","stop","_x","apply","this","openWeatherMapEndpoint","replace","openweathermapEndpoint","axios","get","then","response","status","ERROR","catch","error","FORBIDDEN","UNAUTHORIZED","RadioGroupTag","_React$PureComponent","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","target","onRadioChange","defaultValue","inherits","createClass","key","RadioGroup","style","flexDirection","onChange","options","map","btn","FormControlLabel","control","Radio","React","PureComponent","PrevArrowDv","div","Arrows_templateObject","NextArrowDv","_templateObject2","DayCard","_getPrototypeOf2","_len","args","Array","_key","onCardChange","date","_this$props","daysData","isSelected","currentTemp","filter","item","CardWrap","_DayCard_Card","onClick","className","H3","Math","round","temp","tempUnit","current_datetime","Date","getDate","getMonth","getFullYear","dateDisplayFormat","_DayCard_templateObject","Card","CustomCard","_DayCard_templateObject2","h3","_templateObject3","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","display","Arrow","prevArrow","DayCardsSlider","dates","selected","SliderWrapper","lib_default","_DayCard_DayCard","_DayCardsSlide_templateObject","BarChart","labels","chartLabel","chartData","toConsumableArray","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","react_chartjs_2_es","height","maintainAspectRatio","ErrorAlert","ErrorAlertBox","ErrorAlert_templateObject","WeatherInfo","selectedUnit","currentTempData","time","temps","WeatherInfoWrapper","RadioGroupWrapper","RadioGroup_RadioGroupTag","onUnitChange","Fragment","_DayCardsSlide_DayCardsSlider","BarChart_BarChart","METRIC","CELECIUS","FAHRENHEIT","ErrorAlert_ErrorAlert","_WeatherInfo_templateObject","_WeatherInfo_templateObject2","WeatherAppMainView","list","dt_txt","split","slice","main","from","Set","_WeatherInfo_WeatherInfo","Loader_Loader","connect","ownProps","_getWeatherDataRemoteAction2","App","WeatherView_WeatherAppMainView","store","_React$Component","_class","es","src_App","Component","createApp","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a858ebc3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { IWeatherState, IGetWeatherDataAction } from \"./types\";\r\nimport { RECEIVED_WEATHER_DATA, INPROGRESS_WEATHER_DATA } from \"./action-types\";\r\n\r\nconst initialState:IWeatherState = {\r\n        data:{\r\n            cod:\"\",\r\n            message:0,\r\n            cnt:0\r\n        },\r\n        isLoading:false\r\n}\r\nexport const WeatherReducer = (state:IWeatherState = initialState , action:IGetWeatherDataAction):IWeatherState =>{\r\n    switch(action.type){\r\n        case RECEIVED_WEATHER_DATA:\r\n            if(action.payload){\r\n                return{\r\n                    ...state,\r\n                    data:{\r\n                        ...state.data,\r\n                        ...action.payload\r\n                    },\r\n                    isLoading:false\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    isLoading:false\r\n                }\r\n            }\r\n        case INPROGRESS_WEATHER_DATA:\r\n            return{\r\n                ...state,\r\n                isLoading:true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\n","export const RECEIVED_WEATHER_DATA = \"RECEIVED_WEATHER_DATA\"\r\nexport const INPROGRESS_WEATHER_DATA = \"INPROGRESS_WEATHER_DATA\"","import { Store, Action, createStore as createReduxStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk,{ ThunkMiddleware} from 'redux-thunk'\r\nimport { IAppState } from './globalTypes';\r\nimport { WeatherReducer } from './weatherReducer';\r\n\r\nconst createReducer = () => {\r\n    return combineReducers<IAppState>({\r\n        weather:WeatherReducer\r\n    })\r\n} \r\nexport const createDefaultAppStore=():IAppState=>{\r\n    return {}\r\n}\r\nexport const createStore = (): Store<IAppState, Action> =>{\r\n    const reducer = createReducer();\r\n    return createReduxStore(reducer,createDefaultAppStore(), applyMiddleware(thunk as ThunkMiddleware<IAppState, Action>))\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport LoaderImg from '../../assets/images/loader.gif'\r\n\r\nexport const Loader:React.FC = () => {\r\n    return (\r\n        <LoaderWrapper>\r\n            <img src={LoaderImg} alt=\"\" width={200} />\r\n        </LoaderWrapper>\r\n    )\r\n}\r\n\r\nconst LoaderWrapper = styled.section`\r\n    position:fixed;\r\n    width:100%;\r\n    height:100%\r\n    background:rgba(255,255,255, .5);\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center\r\n`","const APPID = `75f972b80e26f14fe6c920aa6a85ad57`\r\nconst COUNT = \"40\"\r\nconst CITY = \"Munich\"\r\nconst COUNTRYCODE = \"de\"\r\nconst openweathermapURL = `https://api.openweathermap.org/data/2.5/forecast?q=${CITY},${COUNTRYCODE}&APPID=${APPID}&cnt=${COUNT}&units={unit}`\r\n\r\nexport const openweathermapEndpoint=(unit:string) => {\r\n    return openweathermapURL.replace('{unit}', unit);\r\n}\r\nexport enum FetchResultType{\r\n    ERROR = 'ERRROR',\r\n    SUCCESS ='SUCCESS',\r\n    UNAUTHORIZED = 'UNAUTHORIZED',\r\n    FORBIDDEN = 'FORBIDDEN'\r\n}\r\nexport const Units = [{\r\n    label:'Celcius',\r\n    value:'metric'\r\n},{\r\n    label:'Fahrenheit',\r\n    value:'imperial'\r\n}]\r\n\r\nexport enum TempUnit {\r\n    CELECIUS = 'Celcius',\r\n    FAHRENHEIT = 'Fahrenheit',\r\n    METRIC = 'metric',\r\n    IMPERIAL = 'imperial'\r\n}\r\n\r\nexport const defaultUnit = \"metric\"\r\nexport const months = [\"JAN\", \"FEB\", \"MAR\",\"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport { RECEIVED_WEATHER_DATA, INPROGRESS_WEATHER_DATA } from \"../../../store/weatherReducer/action-types\";\r\nimport { IAppState } from \"../../../store/globalTypes\";\r\nimport { IWeatherResponse } from \"../../../store/weatherReducer/types\";\r\nimport axios, { AxiosResponse, AxiosError } from \"axios\";\r\nimport {\r\n  FetchResultType,\r\n  openweathermapEndpoint\r\n} from \"../../../assets/common/Contstants\";\r\n\r\nexport const getWeatherDataRemoteAction = (\r\n  unit: string\r\n): ThunkAction<Promise<void>, IAppState, {}, AnyAction> => {\r\n  return async (\r\n    dispatch: ThunkDispatch<IAppState, {}, AnyAction>\r\n  ): Promise<void> => {\r\n    dispatch(fetchingWeatherDataAction())\r\n    const weatherData = await openWeatherMapAPI(unit);\r\n    dispatch(getWeatherDataAction(weatherData));\r\n  };\r\n};\r\n\r\nconst openWeatherMapAPI = (unit: string) => {\r\n  const openWeatherMapEndpoint = openweathermapEndpoint(unit);\r\n  return axios\r\n    .get(openWeatherMapEndpoint)\r\n    .then((response: AxiosResponse) => {\r\n      if (response.status === 200) {\r\n        return response.data;\r\n      } else {\r\n        return {\r\n          status: FetchResultType.ERROR,\r\n          message: \"Unkown error\"\r\n        };\r\n      }\r\n    })\r\n    .catch((error: AxiosError) => {\r\n      if (error.response && error.response.status) {\r\n        if (error.response.status === 403) {\r\n          return {\r\n            status: FetchResultType.FORBIDDEN,\r\n            message: error.response!.data\r\n          };\r\n        }\r\n        if (error.response.status === 401) {\r\n          return {\r\n            status: FetchResultType.UNAUTHORIZED,\r\n            message: error.response!.data\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        status: FetchResultType.ERROR,\r\n        message: error.response!.data\r\n      };\r\n    });\r\n};\r\n\r\nexport const fetchingWeatherDataAction = () => {\r\n  return {\r\n    type: INPROGRESS_WEATHER_DATA\r\n  }\r\n}\r\n\r\nexport const getWeatherDataAction = (response: IWeatherResponse) => {\r\n  return {\r\n    type: RECEIVED_WEATHER_DATA,\r\n    payload: response\r\n  };\r\n};\r\n","import React from 'react'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\ninterface IOptions {\r\n    label:string\r\n    value:string\r\n}\r\ninterface IRadioGroupTagProps {\r\n    onRadioChange:(selectedValue:string) => any\r\n    options:IOptions[]\r\n    defaultValue:string\r\n}\r\nexport interface IRadioGroupTagState {\r\n    value:string\r\n}\r\nexport class RadioGroupTag extends React.PureComponent<IRadioGroupTagProps,IRadioGroupTagState>{\r\n        constructor(props:IRadioGroupTagProps){\r\n            super(props);\r\n            this.state ={\r\n                value:this.props.defaultValue\r\n            }\r\n        }\r\n        public handleChange = (event:any) => {\r\n            this.setState({\r\n                value:event.target.value\r\n            })\r\n            this.props.onRadioChange(event.target.value);\r\n        }\r\n        public render(){\r\n            return(\r\n                <RadioGroup style={{\r\n                    flexDirection:'row'\r\n                }} value={this.state.value} onChange={this.handleChange}>\r\n                    {\r\n                        this.props.options.map( (btn:IOptions) => \r\n                            <FormControlLabel key={btn.value} value={btn.value} control={<Radio />} label={btn.label} />    \r\n                        )\r\n                    }\r\n                </RadioGroup>\r\n            )\r\n        }\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Arrow from \"../../assets/images/arrow.svg\";\r\n\r\nconst PrevArrowDv = styled.div`\r\n  display: block;\r\n  img {\r\n    transform: rotate(180deg);\r\n  }\r\n  &.slick-disabled {\r\n    display: none !important;\r\n  }\r\n`;\r\nconst NextArrowDv = styled.div`\r\n  display: block;\r\n  &.slick-disabled {\r\n    display: none !important;\r\n  }\r\n`;\r\nexport const NextArrow = (props: any) => {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <NextArrowDv\r\n      className={className}\r\n      style={{ ...style, display: \"block\" }}\r\n      onClick={onClick}\r\n    >\r\n      <img src={Arrow} alt=\"\" />\r\n    </NextArrowDv>\r\n  );\r\n};\r\nexport const PrevArrow = (props: any) => {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <PrevArrowDv className={className} style={{ ...style }} onClick={onClick}>\r\n      <img src={Arrow} alt=\"\" />\r\n    </PrevArrowDv>\r\n  );\r\n};","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card as CustomCard } from \"@material-ui/core\";\r\nimport { IDaysDataItem } from \"../../../store/weatherReducer/types\";\r\nimport { dateDisplayFormat } from \"../../../assets/common/Utility\";\r\n\r\ninterface IDayCardsSliderProps {\r\n  daysData: IDaysDataItem[];\r\n  date: string\r\n  isSelected:boolean\r\n  onCardChange:(date:string) => any\r\n}\r\nexport class DayCard extends React.PureComponent<IDayCardsSliderProps> {\r\n  public render() {\r\n    const { date, daysData, isSelected } = this.props;\r\n    const tempData = daysData.filter(item => item.date === date);\r\n    const currentTemp = tempData[0];\r\n    return (\r\n      <CardWrap key={date}>\r\n        <Card onClick={this.onCardChange} className={isSelected ? 'selected':''}>\r\n            {<H3>{Math.round(currentTemp.temp)} &deg;{currentTemp.tempUnit}</H3>}\r\n            <p>{dateDisplayFormat(date)}</p>\r\n        </Card>\r\n      </CardWrap>\r\n    );\r\n  }\r\n  public onCardChange = ()=>{\r\n      this.props.onCardChange(this.props.date)\r\n  }\r\n}\r\n\r\nconst CardWrap = styled.div`\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  height:100%;\r\n  p{\r\n    @media(max-width:375px){\r\n      font-size:13px\r\n    }\r\n  }\r\n`;\r\nconst Card = styled(CustomCard)`\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  height:100%;\r\n  cursor:pointer;\r\n  &:hover{\r\n    box-shadow: 4px 4px 9px -5px rgba(0,0,0,0.75);\r\n  }\r\n  &.selected{\r\n    border:1px solid #ff0\r\n  }\r\n`;\r\nconst H3 = styled.h3`\r\n  font-size:20px;\r\n  @media(max-width:375px){\r\n    font-size:15px\r\n  }\r\n`","import { months } from \"./Contstants\";\r\n\r\nexport const dateDisplayFormat = (date:string) => {\r\n    let current_datetime = new Date(date)\r\n    return current_datetime.getDate() + \" \" + months[current_datetime.getMonth()] + \" \" + current_datetime.getFullYear()\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Slider from \"react-slick\";\r\nimport { IDaysDataItem } from \"../../../store/weatherReducer/types\";\r\nimport { NextArrow, PrevArrow } from \"../../core/Arrows\";\r\nimport { DayCard } from \"./_DayCard\";\r\n\r\nconst settings = {\r\n  dots: false,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  slidesToScroll: 1,\r\n  nextArrow: <NextArrow />,\r\n  prevArrow: <PrevArrow />\r\n};\r\ninterface IDayCardsSliderProps{\r\n  daysData:IDaysDataItem[]\r\n  dates: string[]\r\n  selected:string\r\n  onCardChange:(date:string) => any\r\n}\r\nexport class DayCardsSlider extends React.PureComponent<IDayCardsSliderProps> {\r\n  public render() {\r\n    const { dates, daysData, selected} = this.props\r\n    return (\r\n      <SliderWrapper>\r\n          <Slider {...settings}>\r\n            {\r\n              dates.map(date =>\r\n                <DayCard onCardChange={this.props.onCardChange} isSelected={selected === date} key={date} date={date} daysData={daysData} />\r\n              )\r\n            }\r\n          </Slider>\r\n      </SliderWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst SliderWrapper = styled.div`\r\n    padding-top:50px;\r\n    .slick-next{\r\n      top:-50px;\r\n      right:22px\r\n    }\r\n    .slick-prev{\r\n      top:-50px;\r\n      left:22px\r\n    }\r\n`","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\ninterface IBarChartProps{\r\n    labels:string[]\r\n    data:number[]\r\n    chartLabel:string\r\n}\r\nexport class BarChart extends React.PureComponent<IBarChartProps>{\r\n    public render() {\r\n        const { labels, data,chartLabel } = this.props\r\n        const chartData = {\r\n            labels: [...labels],\r\n            datasets: [\r\n              {\r\n                label: chartLabel,\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [...data]\r\n              }\r\n            ]\r\n          };\r\n          \r\n        return (\r\n          <div>\r\n            <Bar\r\n              data={chartData}\r\n              width={100}\r\n              height={300}\r\n              options={{\r\n                maintainAspectRatio: false,\r\n                labels:false\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n}","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\ninterface IErrorAlertProps{\r\n    error:string\r\n}\r\nexport class ErrorAlert extends React.PureComponent<IErrorAlertProps>{\r\n    public render(){\r\n        const { error } = this.props\r\n        return(\r\n            <ErrorAlertBox>\r\n                {error}\r\n            </ErrorAlertBox>\r\n        )\r\n    }\r\n}   \r\n\r\nconst ErrorAlertBox = styled.div`\r\n    color: #a94442;\r\n    background-color: #f2dede;\r\n    border-color: #ebccd1;\r\n    padding: 15px;\r\n    margin-bottom: 20px;\r\n    border: 1px solid transparent;\r\n    border-radius: 4px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { RadioGroupTag } from '../../core/RadioGroup';\r\nimport { Units, TempUnit } from '../../../assets/common/Contstants';\r\nimport { DayCardsSlider } from './_DayCardsSlide';\r\nimport { IDaysDataItem } from '../../../store/weatherReducer/types';\r\nimport { BarChart } from '../../core/BarChart';\r\nimport { ErrorAlert } from '../../core/ErrorAlert';\r\n\r\ninterface IWeatherInfo {\r\n    onUnitChange:(unit:string) => any\r\n    dates:string[]\r\n    daysData:IDaysDataItem[]\r\n    selectedUnit:string\r\n}\r\nexport class WeatherInfo extends React.PureComponent<IWeatherInfo>{\r\n    public state = {\r\n        selected:this.props.dates[0]\r\n    }\r\n    public render(){\r\n        const { daysData, dates, selectedUnit } = this.props;\r\n        const { selected } = this.state\r\n        const currentTempData = daysData.filter(item => item.date === selected)\r\n        const labels = currentTempData.map(item => item.time);\r\n        const temps = currentTempData.map(item => item.temp);\r\n        return(\r\n            <WeatherInfoWrapper>\r\n                <RadioGroupWrapper>\r\n                    <RadioGroupTag defaultValue={selectedUnit} options={Units} onRadioChange={this.props.onUnitChange} />\r\n                </RadioGroupWrapper>\r\n                { daysData.length > 0 ? <><DayCardsSlider onCardChange={this.onCardChange} selected={selected} dates={dates} daysData={daysData} />\r\n                <BarChart chartLabel={`Temparature in ${selectedUnit=== TempUnit.METRIC ? TempUnit.CELECIUS:TempUnit.FAHRENHEIT}`} labels={labels} data={temps} /></> : <ErrorAlert error={`No weather data available`} />}\r\n            </WeatherInfoWrapper>\r\n        )\r\n    }\r\n    public onCardChange = (date:string) => {\r\n        this.setState({\r\n            selected:date\r\n        })\r\n    }\r\n}\r\n\r\nconst WeatherInfoWrapper = styled.section`\r\n        max-width:960px;\r\n        margin:0 auto;\r\n        font-family:\"Roboto\", \"Helvetica\", \"Arial\", sans-serif\r\n`\r\nconst RadioGroupWrapper = styled.div`\r\n        display:flex;\r\n        justify-content:center;\r\n        margin-bottom:50px\r\n`","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { Loader } from '../../core/Loader';\r\nimport { IWeatherState } from '../../../store/weatherReducer/types';\r\nimport { IAppState } from '../../../store/globalTypes';\r\nimport { getWeatherDataRemoteAction } from './actions';\r\nimport { WeatherInfo } from './_WeatherInfo';\r\nimport { defaultUnit, TempUnit } from '../../../assets/common/Contstants';\r\n\r\ninterface IWeatherDataProps {\r\n    weatherData?:IWeatherState | undefined\r\n}\r\n\r\ninterface DispatchProps{\r\n    getWeatherDataRemoteAction:(unit:string) => any\r\n}\r\n\r\ntype IWeatherAppMainViewProps = IWeatherDataProps & DispatchProps\r\n\r\nclass WeatherAppMainView extends React.PureComponent<IWeatherAppMainViewProps>{\r\n    public state = {\r\n        selectedUnit:\"\"\r\n    }\r\n    \r\n    public componentDidMount(){\r\n        this.setState({\r\n            selectedUnit:defaultUnit\r\n        })\r\n        this.props.getWeatherDataRemoteAction(defaultUnit)\r\n    }\r\n    public onUnitChange = (unit:string) =>{\r\n        this.setState({\r\n            selectedUnit:unit\r\n        })\r\n        this.props.getWeatherDataRemoteAction(unit)\r\n    }\r\n    public render(){\r\n        const { weatherData } = this.props;\r\n        const { selectedUnit } = this.state;\r\n        const unit = selectedUnit === TempUnit.METRIC ? \"C\": \"F\";\r\n        const daysData = weatherData && weatherData.data.list && weatherData.data.list !== null && weatherData.data.list.length !== 0 ? weatherData.data.list.map(item => {\r\n            return {\r\n                date:item.dt_txt.split(\" \")[0],\r\n                time:item.dt_txt.split(\" \")[1].slice(0,5),\r\n                tempUnit:`${unit}`,\r\n                temp:item.main.temp\r\n            }\r\n        }): [];\r\n        const dates = daysData && daysData.length !== 0 ? Array.from(new Set(daysData.map(item => item.date.split(\" \")[0]))) : [];\r\n        return(\r\n             weatherData && !weatherData.isLoading? \r\n             <WeatherInfo selectedUnit={selectedUnit} dates={dates} daysData={daysData} onUnitChange={this.onUnitChange} />:<Loader />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state:IAppState) => {\r\n    return{\r\n        weatherData:state.weather\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>, ownProps: IWeatherDataProps): DispatchProps => {\r\n    return {\r\n      getWeatherDataRemoteAction: async (unit:string) => {\r\n        await dispatch(getWeatherDataRemoteAction(unit))\r\n      }\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStatetoProps,mapDispatchToProps)(WeatherAppMainView)","import React from 'react';\nimport WeatherAppMainView from './components/views/WeatherView/WeatherAppMainView';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <WeatherAppMainView />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createApp } from './components/createApp';\n\nconst App = createApp();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { createStore } from \"../store\";\r\nimport App from '../App';\r\n\r\nexport const createApp =() => {\r\n    const store = createStore();\r\n    return class extends React.Component<{}>{\r\n        public render(){\r\n            return(\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            )\r\n        }\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/arrow.1eb74ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.7171bba4.gif\";"],"sourceRoot":""}